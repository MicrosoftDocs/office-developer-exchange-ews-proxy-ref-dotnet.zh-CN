<Type Name="UpdateDelegateType" FullName="ExchangeWebServices.UpdateDelegateType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c62b7cc22de5988dc5dc91590deb912a8006e755" />
    <Meta Name="ms.sourcegitcommit" Value="09f9993d313d1e3ec77e21f70573b3fced6eea2e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20603748" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UpdateDelegateType : ExchangeWebServices.BaseDelegateType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UpdateDelegateType extends ExchangeWebServices.BaseDelegateType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.UpdateDelegateType" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdateDelegateType&#xA;Inherits BaseDelegateType" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdateDelegateType : ExchangeWebServices::BaseDelegateType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.BaseDelegateType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/messages")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="94f07-101">
        <see cref="T:ExchangeWebServices.UpdateDelegateType" />类表示请求来更新邮箱的代理设置。</span>
      <span class="sxs-lookup">
        <span data-stu-id="94f07-101">The <see cref="T:ExchangeWebServices.UpdateDelegateType" /> class represents a request to update delegate settings on a mailbox.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <example>
      <span data-ttu-id="94f07-102">
        <para>下面的示例演示了如何更新委托 user1 的帐户的权限。User2 授予无权限级别的日历文件夹，并授予查看专用的项目的权限。User3 被授予日记文件夹的审阅者权限。会议请求发送到的代理人，并为 user1 发送有关请求的信息。</para>
        <code>static void UpdateDelegate()
{
    // Set the version, credentials, and the Client Access server on ExchangeServiceBinding.
    ExchangeServiceBinding esb = new ExchangeServiceBinding();
    esb.RequestServerVersionValue = new RequestServerVersion();
    esb.RequestServerVersionValue.Version = ExchangeVersionType.Exchange2007_SP1;
    esb.Credentials = new NetworkCredential("username", "password", "domain");
    esb.Url = "https://FQDN/ews/exchange.asmx";

    // Create the request.
    UpdateDelegateType request = new UpdateDelegateType();

    // Identify the mailbox for which delegate settings will be updated.
    request.Mailbox = new EmailAddressType();
    request.Mailbox.EmailAddress = "user1@example.com";

    // Update delegate user permissions for user2.
    request.DelegateUsers = new DelegateUserType[3] { new DelegateUserType(), new DelegateUserType(), new DelegateUserType() };
    request.DelegateUsers[0].UserId = new UserIdType();
    request.DelegateUsers[0].UserId.PrimarySmtpAddress = "user2@example.com";
    request.DelegateUsers[0].DelegatePermissions = new DelegatePermissionsType();
    request.DelegateUsers[0].DelegatePermissions.CalendarFolderPermissionLevel = DelegateFolderPermissionLevelType.None;
    request.DelegateUsers[0].DelegatePermissions.CalendarFolderPermissionLevelSpecified = true;
    request.DelegateUsers[0].ViewPrivateItems = true;
    request.DelegateUsers[0].ViewPrivateItemsSpecified = true;

    // Update delegate user permissions.
    request.DelegateUsers[1].UserId = new UserIdType();
    request.DelegateUsers[1].UserId.PrimarySmtpAddress = "user3@example.com";
    request.DelegateUsers[1].DelegatePermissions = new DelegatePermissionsType();
    request.DelegateUsers[1].DelegatePermissions.JournalFolderPermissionLevel = DelegateFolderPermissionLevelType.Reviewer;
    request.DelegateUsers[1].DelegatePermissions.JournalFolderPermissionLevelSpecified = true;

    // Identify how meeting requests are handled.
    request.DeliverMeetingRequests = new DeliverMeetingRequestsType();
    request.DeliverMeetingRequests = DeliverMeetingRequestsType.DelegatesAndSendInformationToMe;
    request.DeliverMeetingRequestsSpecified = true;

    try
    {
        // Send the UpdateDelegate request and get the response.
        UpdateDelegateResponseMessageType response = esb.UpdateDelegate(request);
        DelegateUserResponseMessageType[] durmt = new DelegateUserResponseMessageType[] { };
        durmt = response.ResponseMessages;

        // Check each response message.
        foreach (DelegateUserResponseMessageType resp in durmt)
        {
            if (resp.ResponseClass == ResponseClassType.Success)
            {
                Console.WriteLine("Delegate user updated: " + resp.DelegateUser.UserId.DisplayName);
            }
            else if (resp.ResponseClass == ResponseClassType.Error)
            {
                Console.WriteLine("Error: " + resp.MessageText);
            }
            else
                Console.WriteLine("Warning: " + resp.MessageText);
        }
        Console.ReadLine();
    }
    catch (Exception e)
    {
        Console.WriteLine(e.Message);
        Console.ReadLine();
    }
}</code>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="94f07-102">
          <para>The following example shows you how to update delegate permissions on user1's account. User2 is granted the None permission level for the Calendar folder and is granted permission to view private items. User3 is granted Reviewer permissions for the Journal folder. Meeting requests are sent to the delegates and information about the request is sent to user1.</para>
          <code>static void UpdateDelegate()
{
    // Set the version, credentials, and the Client Access server on ExchangeServiceBinding.
    ExchangeServiceBinding esb = new ExchangeServiceBinding();
    esb.RequestServerVersionValue = new RequestServerVersion();
    esb.RequestServerVersionValue.Version = ExchangeVersionType.Exchange2007_SP1;
    esb.Credentials = new NetworkCredential("username", "password", "domain");
    esb.Url = "https://FQDN/ews/exchange.asmx";

    // Create the request.
    UpdateDelegateType request = new UpdateDelegateType();

    // Identify the mailbox for which delegate settings will be updated.
    request.Mailbox = new EmailAddressType();
    request.Mailbox.EmailAddress = "user1@example.com";

    // Update delegate user permissions for user2.
    request.DelegateUsers = new DelegateUserType[3] { new DelegateUserType(), new DelegateUserType(), new DelegateUserType() };
    request.DelegateUsers[0].UserId = new UserIdType();
    request.DelegateUsers[0].UserId.PrimarySmtpAddress = "user2@example.com";
    request.DelegateUsers[0].DelegatePermissions = new DelegatePermissionsType();
    request.DelegateUsers[0].DelegatePermissions.CalendarFolderPermissionLevel = DelegateFolderPermissionLevelType.None;
    request.DelegateUsers[0].DelegatePermissions.CalendarFolderPermissionLevelSpecified = true;
    request.DelegateUsers[0].ViewPrivateItems = true;
    request.DelegateUsers[0].ViewPrivateItemsSpecified = true;

    // Update delegate user permissions.
    request.DelegateUsers[1].UserId = new UserIdType();
    request.DelegateUsers[1].UserId.PrimarySmtpAddress = "user3@example.com";
    request.DelegateUsers[1].DelegatePermissions = new DelegatePermissionsType();
    request.DelegateUsers[1].DelegatePermissions.JournalFolderPermissionLevel = DelegateFolderPermissionLevelType.Reviewer;
    request.DelegateUsers[1].DelegatePermissions.JournalFolderPermissionLevelSpecified = true;

    // Identify how meeting requests are handled.
    request.DeliverMeetingRequests = new DeliverMeetingRequestsType();
    request.DeliverMeetingRequests = DeliverMeetingRequestsType.DelegatesAndSendInformationToMe;
    request.DeliverMeetingRequestsSpecified = true;

    try
    {
        // Send the UpdateDelegate request and get the response.
        UpdateDelegateResponseMessageType response = esb.UpdateDelegate(request);
        DelegateUserResponseMessageType[] durmt = new DelegateUserResponseMessageType[] { };
        durmt = response.ResponseMessages;

        // Check each response message.
        foreach (DelegateUserResponseMessageType resp in durmt)
        {
            if (resp.ResponseClass == ResponseClassType.Success)
            {
                Console.WriteLine("Delegate user updated: " + resp.DelegateUser.UserId.DisplayName);
            }
            else if (resp.ResponseClass == ResponseClassType.Error)
            {
                Console.WriteLine("Error: " + resp.MessageText);
            }
            else
                Console.WriteLine("Warning: " + resp.MessageText);
        }
        Console.ReadLine();
    }
    catch (Exception e)
    {
        Console.WriteLine(e.Message);
        Console.ReadLine();
    }
}</code>
        </span>
      </span>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdateDelegateType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.UpdateDelegateType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UpdateDelegateType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94f07-103">
            <see cref="T:ExchangeWebServices.UpdateDelegateType" />构造函数初始化的新实例<see cref="T:ExchangeWebServices.UpdateDelegateType" />类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94f07-103">The <see cref="T:ExchangeWebServices.UpdateDelegateType" /> constructor initializes a new instance of the <see cref="T:ExchangeWebServices.UpdateDelegateType" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegateUsers">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.DelegateUserType[] DelegateUsers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.DelegateUserType[] DelegateUsers" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.UpdateDelegateType.DelegateUsers" />
      <MemberSignature Language="VB.NET" Value="Public Property DelegateUsers As DelegateUserType()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;ExchangeWebServices::DelegateUserType ^&gt; ^ DelegateUsers { cli::array &lt;ExchangeWebServices::DelegateUserType ^&gt; ^ get(); void set(cli::array &lt;ExchangeWebServices::DelegateUserType ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("DelegateUser", IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.DelegateUserType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94f07-104">
            <see cref="P:ExchangeWebServices.UpdateDelegateType.DelegateUsers" />属性获取或设置<see cref="T:ExchangeWebServices.DelegateUserType" />数组，表示要更新的邮箱中的代理人的标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94f07-104">The <see cref="P:ExchangeWebServices.UpdateDelegateType.DelegateUsers" /> property gets or sets a <see cref="T:ExchangeWebServices.DelegateUserType" /> array that represents the identities of delegates to update in a mailbox.</span>
          </span>
          <span data-ttu-id="94f07-105">此属性是可选的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94f07-105">This property is optional.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94f07-106">
            <b>DelgateUsers</b>属性返回的数组<see cref="T:ExchangeWebServices.DelegateUserType" />表示代理人来更新邮箱中的标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94f07-106">The <b>DelgateUsers</b> property returns an array of <see cref="T:ExchangeWebServices.DelegateUserType" /> that represent the identities of delegates to update in a mailbox.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="94f07-107">
            <para>如果在指定的邮箱中存在 SOAP 请求中已包含委派权限设置，将作为请求中指定的值更新的邮箱中的设置。如果在指定的邮箱中尚不存在 SOAP 请求中包含的委派权限设置，该设置将添加到邮箱。在指定的邮箱中存在但 SOAP 请求中不包含任何委托权限设置的邮箱中保持不变。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="94f07-107">
              <para>If a delegate permission setting that is included in the SOAP request already exists in the specified mailbox, the setting in the mailbox will be updated with the value as specified in the request. If a delegate permission setting that is included in the SOAP request does not yet exist in the specified mailbox, the setting will be added to the mailbox. Any delegate permission settings that exist in the specified mailbox but are not included in the SOAP request will remain unchanged in the mailbox.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliverMeetingRequests">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.DeliverMeetingRequestsType DeliverMeetingRequests { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ExchangeWebServices.DeliverMeetingRequestsType DeliverMeetingRequests" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequests" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliverMeetingRequests As DeliverMeetingRequestsType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::DeliverMeetingRequestsType DeliverMeetingRequests { ExchangeWebServices::DeliverMeetingRequestsType get(); void set(ExchangeWebServices::DeliverMeetingRequestsType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.DeliverMeetingRequestsType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94f07-108">
            <see cref="P:ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequests" />属性获取或设置<see cref="T:ExchangeWebServices.DeliverMeetingRequestsType" />对象，表示代理和主体之间确定如何处理会议请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94f07-108">The <see cref="P:ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequests" /> property gets or sets a <see cref="T:ExchangeWebServices.DeliverMeetingRequestsType" /> object that represents how meeting requests are handled between the delegate and the principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94f07-109">
            <see cref="P:ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequests" />属性返回<see cref="T:ExchangeWebServices.DeliverMeetingRequestsType" />对象，表示代理和主体之间确定如何处理会议请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94f07-109">The <see cref="P:ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequests" /> property returns a <see cref="T:ExchangeWebServices.DeliverMeetingRequestsType" /> object that represents how meeting requests are handled between the delegate and the principal.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="94f07-110">
            <para>
              <see cref="P:ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequests" />属性影响的主体的邮箱中的所有代理人。</para>
            <para>必须设置<see cref="P:ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequestsSpecified" />属性设置为<b>true</b>以便该<b>DeliverMeetingRequests</b>序列化为 SOAPrequest。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="94f07-110">
              <para>The <see cref="P:ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequests" /> property affects all delegates in a principal's mailbox.</para>
              <para>You must set the <see cref="P:ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequestsSpecified" /> property to <b>true</b> so that <b>DeliverMeetingRequests</b> is serialized into the SOAPrequest.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliverMeetingRequestsSpecified">
      <MemberSignature Language="C#" Value="public bool DeliverMeetingRequestsSpecified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeliverMeetingRequestsSpecified" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequestsSpecified" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliverMeetingRequestsSpecified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeliverMeetingRequestsSpecified { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94f07-111">
            <b>DeliverMeetingRequestsSpecified</b>属性获取或设置一个 Boolean 值，指定是否<see cref="P:ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequests" />属性序列化为简单对象访问协议 (SOAP) 请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94f07-111">The <b>DeliverMeetingRequestsSpecified</b> property gets or sets a Boolean value that specifies whether the <see cref="P:ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequests" /> property is serialized into the Simple Object Access Protocol (SOAP) request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94f07-112">
            <b>DeliverMeetingRequestsSpecified</b>属性返回布尔值<b>true</b>如果<see cref="P:ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequests" />序列化为简单对象访问协议 (SOAP) 请求;否则，该属性返回<b>false</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94f07-112">The <b>DeliverMeetingRequestsSpecified</b> property returns a Boolean <b>true</b> if <see cref="P:ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequests" /> is serialized into the Simple Object Access Protocol (SOAP) request; otherwise, the property returns <b>false</b>.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>