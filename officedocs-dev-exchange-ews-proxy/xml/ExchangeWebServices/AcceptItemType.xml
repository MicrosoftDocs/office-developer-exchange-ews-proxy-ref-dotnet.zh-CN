<Type Name="AcceptItemType" FullName="ExchangeWebServices.AcceptItemType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35389f1722169e96942d2ea9417a18864e577911" />
    <Meta Name="ms.sourcegitcommit" Value="09f9993d313d1e3ec77e21f70573b3fced6eea2e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20602789" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AcceptItemType : ExchangeWebServices.WellKnownResponseObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit AcceptItemType extends ExchangeWebServices.WellKnownResponseObjectType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.AcceptItemType" />
  <TypeSignature Language="VB.NET" Value="Public Class AcceptItemType&#xA;Inherits WellKnownResponseObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class AcceptItemType : ExchangeWebServices::WellKnownResponseObjectType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.WellKnownResponseObjectType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:ExchangeWebServices.AcceptItemType" />类代表接受响应对象用于答复会议请求或日历项目。</summary>
    <remarks>
      <para>
        <see cref="T:ExchangeWebServices.AcceptItemType" />对象用于接受会议请求或日历项。尽管<see cref="T:ExchangeWebServices.AcceptItemType" />的许多成员继承自许多基类，唯一的属性已设置<see cref="T:ExchangeWebServices.AcceptItemType" />对象是<see cref="P:ExchangeWebServices.ResponseObjectCoreType.ReferenceItemId" />属性。</para>
      <para>
        <b>注释</b>： 用户无法接受会议请求或日历的项为其用户是组织者。</para>
      <para>会议请求具有 IPM ItemClass。Schedule.Meeting.Request。 若要查找仅会议要求使用搜索文件夹或 FindItem 查询时限制结果集 ItemClass 属性。</para>
      <para>如果<see cref="P:ExchangeWebServices.CreateItemType.MessageDisposition" />属性未设置在<see cref="T:ExchangeWebServices.CreateItemType" />、<see cref="F:ExchangeWebServices.ResponseCodeType.ErrorMessageDispositionRequired" />将返回错误。</para>
      <para />
    </remarks>
    <example>
      <para>下面的示例演示如何接受会议请求。在使用的会议请求中的项标识符<see cref="P:ExchangeWebServices.ResponseObjectCoreType.ReferenceItemId" />属性。</para>
      <code>static void AcceptItem(ExchangeServiceBinding esb)
{
    // Create the request.
    CreateItemType request = new CreateItemType();
    
    // Set the message disposition on the request.
    request.MessageDisposition = MessageDispositionType.SendAndSaveCopy;
    request.MessageDispositionSpecified = true;

    // Create the AcceptItem response object.
    AcceptItemType acceptItem = new AcceptItemType();
    
    // Identify the meeting request to accept.
    acceptItem.ReferenceItemId = new ItemIdType();
    acceptItem.ReferenceItemId.Id = "AAAnAHJheA=";

    // Add the AcceptItem response object to the request.
    request.Items = new NonEmptyArrayOfAllItemsType();
    request.Items.Items = new ItemType[1];
    request.Items.Items[0] = acceptItem;

    // Send the request and get the response.
    CreateItemResponseType response = esb.CreateItem(request);

    ArrayOfResponseMessagesType aormt = response.ResponseMessages;
    ResponseMessageType[] rmta = aormt.Items;

    foreach (ResponseMessageType rmt in rmta)
    {
        ItemInfoResponseMessageType iirmt = (rmt as ItemInfoResponseMessageType);
        if (iirmt.ResponseClass == ResponseClassType.Success)
        {
            Console.WriteLine("Successfully accepted meeting");
        }
    }
}</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AcceptItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.AcceptItemType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AcceptItemType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:ExchangeWebServices.AcceptItemType" />构造函数初始化的新实例<see cref="T:ExchangeWebServices.AcceptItemType" />类。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>