<Type Name="FindItemType" FullName="ExchangeWebServices.FindItemType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c4c1eccb292f65c95b1697c7acb299c1d2e6dc8" />
    <Meta Name="ms.sourcegitcommit" Value="09f9993d313d1e3ec77e21f70573b3fced6eea2e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20603304" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FindItemType : ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FindItemType extends ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.FindItemType" />
  <TypeSignature Language="VB.NET" Value="Public Class FindItemType&#xA;Inherits BaseRequestType" />
  <TypeSignature Language="C++ CLI" Value="public ref class FindItemType : ExchangeWebServices::BaseRequestType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.BaseRequestType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/messages")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:ExchangeWebServices.FindItemType" />类表示的查询，以查找邮箱中的项目。</summary>
    <remarks>
      <para>
        <see cref="T:ExchangeWebServices.FindItemType" />类提供了用于查询邮箱的许多选项。尽管 FindItem 查询仅限于浅表和软删除搜索的一组文件夹，多个选项是可用于创建复杂的搜索表达式和视图的搜索结果集。<see cref="T:ExchangeWebServices.FindItemType" />类包含一组用于设置搜索参数的属性。下表列出描述用于构建查询的不同参数的属性。</para>
      <para>用于构建查询的属性</para>
      <list type="table">
        <item>
          <term>
            <see cref="P:ExchangeWebServices.FindItemType.Item" />
          </term>标识在结果集中的分页机制。此属性是可选的。
        </item>
        <item>
          <term>
            <see cref="P:ExchangeWebServices.FindItemType.Item1" />
          </term>标识数据分组结果集中的方式。此属性是可选的。如果未设置此属性，将应用分组。
        </item>
        <item>
          <term>
            <see cref="P:ExchangeWebServices.FindItemType.ItemShape" />
          </term>的项目属性返回的结果集内的项目的标识。
        </item>
        <item>
          <term>
            <see cref="P:ExchangeWebServices.FindItemType.ParentFolderIds" />
          </term>标识要搜索的文件夹。
        </item>
        <item>
          <term>
            <see cref="P:ExchangeWebServices.FindItemType.Restriction" />
          </term>标识一套在结果集中返回的项定义筛选器的参数。此属性是可选的。
        </item>
        <item>
          <term>
            <see cref="P:ExchangeWebServices.FindItemType.SortOrder" />
          </term>标识各项在结果集中的排序方式。此属性是可选的。
        </item>
        <item>
          <term>
            <see cref="P:ExchangeWebServices.FindItemType.Traversal" />
          </term>标识文件夹中执行搜索后。
        </item>
      </list>
      <para>FindItem 查询应用于经常更改，并且不需要的文件夹结构的深度遍历的查询。如果定期执行特定搜索，则它可能更适合创建用于搜索的搜索文件夹。搜索文件夹还可以执行文件夹结构的深度遍历的注释。</para>
      <para>
        <b>重要说明</b>： 搜索文件夹在 Exchange Server 2007 数据库中运行，因此会影响运行 Exchange 服务器，而 FindItem 查询只会影响性能时查询都会收到的计算机的性能Exchange 服务器。</para>
      <para>FindItem 查询将提供何种客户端应用程序需要的信息。它基本上返回的项目的摘要。FindItem 返回仅第一个 512 个字节的任何流式属性。对于 Unicode，它使用以 null 结尾的 Unicode 字符串中返回的前 255 个字符。</para>
      <para>
        <b>注释</b>： FindItem 不会返回邮件正文、 附件或收件人列表。</para>使用
      <para><see cref="T:ExchangeWebServices.GetItemType" />来获取特定项目的详细信息。GetItem 返回比 FindItem 的多个属性。客户端应用程序是否需要详细信息，必须执行 FindItem 呼叫，然后使用 GetItem 呼叫中的项标识符获取 FindItem 呼叫中不可用的属性。</para><para>下表列出了在两个 FindItem 返回属性并调用 GetItem。</para><para>返回 FindItem 和 GetItem 中调用的属性</para><list type="table"><item><term>ConversationIndex</term><description>ConversationTopic</description><description>区域性</description></item><item><term>DateTimeCreated</term><description>DateTimeReceived</description><description>DateTimeSent</description></item><item><term>DisplayCc</term><description>DisplayTo</description><description>从</description></item><item><term>HasAttachments</term><description>重要性</description><description>InReplyTo</description></item><item><term>InternetMessageId</term><description>IsDeliveryReceiptRequested</description><description>IsDraft</description></item><item><term>IsFromMe</term><description>IsRead</description><description>IsReadReceiptRequested</description></item><item><term>IsResend</term><description>IsResponseRequested</description><description>IsSubmitted</description></item><item><term>IsUnmodified</term><description>ItemClass</description><description>ItemId</description></item><item><term>ParentFolderId</term><description>引用</description><description>ReminderDueBy</description></item><item><term>ReminderIsSet</term><description>ReminderMinutesBeforeStart</description><description>发件人</description></item><item><term>敏感度</term><description>大小</description><description>主题</description></item></list><para><b>注意</b>： 虽然发件人属性返回 FindItem 和 GetItem 中调用，返回 DisplayName （字符串） FindItem 呼叫中。返回 DisplayName （字符串）、 电子邮件地址 (NonEmptyStringType) 和 RoutingType (EmailAddress) 通过调用 GetItem。</para><para><see cref="P:ExchangeWebServices.FindItemType.Item" />和<see cref="P:ExchangeWebServices.FindItemType.Item1" />属性创建代理生成过程，以及它如何处理选择的 XML 架构的元素。<see cref="P:ExchangeWebServices.FindItemType.Item" />属性设置为一个对象，扩展<see cref="T:ExchangeWebServices.BasePagingType" />类。此属性描述了将在响应中返回哪种类型的视图。<see cref="P:ExchangeWebServices.FindItemType.Item1" />属性设置为一个对象，扩展<see cref="T:ExchangeWebServices.BaseGroupByType" />类。此属性描述了如何响应将组结果集内的项目。有关这些属性的详细信息，请参阅 XML 架构选项元素代理项目。</para><para /></remarks>
    <example>
      <para>下面的代码示例显示返回以下结果的查找项查询：</para>
      <list type="number">
        <item>
          <description>索引的查询结果的结果集的开头开始，并从结果集中返回最多 10 个条目。</description>
        </item>
        <item>
          <description>组合的搜索的执行下列操作：</description>
        </item>
        <item>
          <description>所有定义的 AllProperties 形状属性，除了 IsMeeting 和重要性属性。请注意，AllProperties 形状 FindItem 操作中不同比 GetItem 操作中。</description>
        </item>
        <item>
          <description>项目位于日历默认文件夹。</description>
        </item>
        <item>
          <description>具有晚于当前时间的开始时间的唯一项。</description>
        </item>
        <item>
          <description>项目按 Subject 属性。</description>
        </item>
        <item>
          <description>仅在搜索文件夹的最高级别中找到项。</description>
        </item>
      </list>
      <code>static void FindItem()
{
    // Create the service binding.
    ExchangeServiceBinding esb = new ExchangeServiceBinding();
    esb.Credentials = new NetworkCredential("username", "password", "domain");
    esb.Url = @"https://ExchangeServer/EWS/Exchange.asmx";

    // Form the FindItem request.
    FindItemType &lt;span class="label"&gt;findItemRequest&lt;/span&gt; = new &lt;span class="label"&gt;FindItemType&lt;/span&gt;();

    // Define the paging scheme for the result set.
    IndexedPageViewType ipvt = new IndexedPageViewType();
    ipvt.BasePoint = IndexBasePointType.Beginning;
    ipvt.MaxEntriesReturned = 10;
    ipvt.MaxEntriesReturnedSpecified = true;
    ipvt.Offset = 0;
    // Add the paging scheme to the request.
    &lt;span class="label"&gt;findItemRequest&lt;/span&gt;.Item = ipvt;

    // Define the grouping scheme for the result set.
    GroupByType group = new GroupByType();
    // Define the property that is used to determine the order of groups of items in a group.
    AggregateOnType aggregate = new AggregateOnType();
    PathToUnindexedFieldType subject = new PathToUnindexedFieldType();
    subject.FieldURI = UnindexedFieldURIType.itemSubject;
    aggregate.Item = subject;
    aggregate.Aggregate = AggregateType.Minimum;
    group.AggregateOn = aggregate;
    // Define the property that is used to group items.
    PathToUnindexedFieldType importance = new PathToUnindexedFieldType();
    importance.FieldURI = UnindexedFieldURIType.itemImportance;
    group.Item = importance;
    // Define how the groups are ordered in the response.
    group.Order = SortDirectionType.Descending;
    // Add the grouping scheme to the request.
    &lt;span class="label"&gt;findItemRequest&lt;/span&gt;.Item1 = group;

    // Define the item properties that are returned in the response.
    ItemResponseShapeType itemProperties = new ItemResponseShapeType();
    // Use the Default shape for the response.            
    itemProperties.BaseShape = DefaultShapeNamesType.Default;
    // Add more properties to the request.
    PathToUnindexedFieldType addIsMeeting = new PathToUnindexedFieldType();
    PathToUnindexedFieldType addImportance = new PathToUnindexedFieldType();
    addIsMeeting.FieldURI = UnindexedFieldURIType.calendarIsMeeting;
    addImportance.FieldURI = UnindexedFieldURIType.itemImportance;
    itemProperties.AdditionalProperties = new PathToUnindexedFieldType[2];
    itemProperties.AdditionalProperties[0] = addIsMeeting;
    itemProperties.AdditionalProperties[1] = addImportance;
    // Add the properties shape to the request.
    &lt;span class="label"&gt;findItemRequest&lt;/span&gt;.ItemShape = itemProperties;

    // Identify which folders to search.
    DistinguishedFolderIdType[] folderIDArray = new DistinguishedFolderIdType[1];
    folderIDArray[0] = new DistinguishedFolderIdType();
    folderIDArray[0].Id = DistinguishedFolderIdNameType.calendar;
    // Add folders to the request.
    &lt;span class="label"&gt;findItemRequest&lt;/span&gt;.ParentFolderIds = folderIDArray;

    // Create a restriction for the result set.
    RestrictionType restriction = new RestrictionType();
    PathToUnindexedFieldType pteft = new PathToUnindexedFieldType();
    pteft.FieldURI = UnindexedFieldURIType.calendarStart;
    FieldURIOrConstantType fieldURIORConstant = new FieldURIOrConstantType();
    fieldURIORConstant.Item = new ConstantValueType();
    (fieldURIORConstant.Item as ConstantValueType).Value = DateTime.Now.ToString();
    IsGreaterThanType isGreaterThan = new IsGreaterThanType();
    isGreaterThan.Item = pteft;
    isGreaterThan.FieldURIOrConstant = fieldURIORConstant;
    restriction.Item = isGreaterThan;
    &lt;span class="label"&gt;findItemRequest&lt;/span&gt;.Restriction = restriction;

    // Define the sort order of items.
    FieldOrderType[] fieldsOrder = new FieldOrderType[1];
    fieldsOrder[0] = new FieldOrderType();
    PathToUnindexedFieldType subjectOrder = new PathToUnindexedFieldType();
    subjectOrder.FieldURI = UnindexedFieldURIType.itemSubject;
    fieldsOrder[0].Item = subjectOrder;
    fieldsOrder[0].Order = SortDirectionType.Ascending;
    &lt;span class="label"&gt;findItemRequest&lt;/span&gt;.SortOrder = fieldsOrder;

    // Define the traversal type.
    &lt;span class="label"&gt;findItemRequest&lt;/span&gt;.Traversal = ItemQueryTraversalType.Shallow;

    try
    {
        // Send the FindItem request and get the response.
        FindItemResponseType findItemResponse = esb.FindItem(&lt;span class="label"&gt;findItemRequest&lt;/span&gt;);

        // Access the response message.
        ArrayOfResponseMessagesType responseMessages = findItemResponse.ResponseMessages;
        ResponseMessageType responseMessage = responseMessages.Items[0];

        if (responseMessage is FindItemResponseMessageType)
        {
            FindItemResponseMessageType firmt = (responseMessage as FindItemResponseMessageType);
            FindItemParentType fipt = firmt.RootFolder;
            object obj = fipt.Item;

            // Determine whether the FindItem response contains grouped items.
            if (obj is ArrayOfGroupedItemsType)
            {
                ArrayOfGroupedItemsType groupedItems = (obj as ArrayOfGroupedItemsType);
                //TODO: Write code to handle grouped items.
            }

            // FindItem contains an array of items.
            else if (obj is ArrayOfRealItemsType)
            {
                ArrayOfRealItemsType items = (obj as ArrayOfRealItemsType);
                //TODO: Write code to handle items.
            }
        }
    }
    catch (Exception e)
    {
        Console.WriteLine(e.Message);
    }
}</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FindItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.FindItemType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FindItemType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:ExchangeWebServices.FindItemType" />构造函数初始化的新实例<see cref="T:ExchangeWebServices.FindItemType" />类。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.BasePagingType Item { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.BasePagingType Item" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.Item" />
      <MemberSignature Language="VB.NET" Value="Public Property Item As BasePagingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::BasePagingType ^ Item { ExchangeWebServices::BasePagingType ^ get(); void set(ExchangeWebServices::BasePagingType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("SeekToConditionPageItemView", typeof(ExchangeWebServices.SeekToConditionPageViewType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("CalendarView", typeof(ExchangeWebServices.CalendarViewType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("ContactsView", typeof(ExchangeWebServices.ContactsViewType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("FractionalPageItemView", typeof(ExchangeWebServices.FractionalPageViewType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("IndexedPageItemView", typeof(ExchangeWebServices.IndexedPageViewType))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.BasePagingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.FindItemType.Item" />属性获取或设置介绍如何在查询结果集中分页的响应中的页面类型。 此属性获取或设置之一<see cref="T:ExchangeWebServices.IndexedPageViewType" />， <see cref="T:ExchangeWebServices.FractionalPageViewType" />， <see cref="T:ExchangeWebServices.CalendarViewType" />，或<see cref="T:ExchangeWebServices.ContactsViewType" />对象。 此属性是可选的。 这是一个读/写属性。</summary>
        <value>
          <see cref="P:ExchangeWebServices.FindItemType.Item" />属性返回<see cref="T:ExchangeWebServices.BasePagingType" />对象，表示的页面执行的查询集中的类型。</value>
        <remarks>
          <para>
            <see cref="P:ExchangeWebServices.FindItemType.Item" />属性可以设置使用<see cref="T:ExchangeWebServices.IndexedPageViewType" />， <see cref="T:ExchangeWebServices.FractionalPageViewType" />， <see cref="T:ExchangeWebServices.CalendarViewType" />，或<see cref="T:ExchangeWebServices.ContactsViewType" />对象。所有这些类型扩展<see cref="T:ExchangeWebServices.BasePagingType" />，这是一个抽象类。此属性是可选的。如果未设置此属性，默认行为是返回结果集中包括的所有项目的视图。</para>
          <para>
            <b>注释</b>： 当您执行的 CalendarView 分页，则无法指定限制。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.BaseGroupByType Item1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.BaseGroupByType Item1" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.Item1" />
      <MemberSignature Language="VB.NET" Value="Public Property Item1 As BaseGroupByType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::BaseGroupByType ^ Item1 { ExchangeWebServices::BaseGroupByType ^ get(); void set(ExchangeWebServices::BaseGroupByType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("GroupBy", typeof(ExchangeWebServices.GroupByType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("DistinguishedGroupBy", typeof(ExchangeWebServices.DistinguishedGroupByType))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.BaseGroupByType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.FindItemType.Item1" />属性获取或设置介绍如何在查询结果集中分组的响应中的分组类型。 此属性获取或设置之一<see cref="T:ExchangeWebServices.GroupByType" />或<see cref="T:ExchangeWebServices.DistinguishedGroupByType" />对象。 此属性是可选的。 这是一个读/写属性。</summary>
        <value>
          <see cref="P:ExchangeWebServices.FindItemType.Item1" />属性返回<see cref="T:ExchangeWebServices.BaseGroupByType" />对象，表示分组方案应用于在结果集中的类型。</value>
        <remarks>
          <para>
            <see cref="P:ExchangeWebServices.FindItemType.Item1" />属性可以设置使用<see cref="T:ExchangeWebServices.GroupByType" />或<see cref="T:ExchangeWebServices.DistinguishedGroupByType" />对象。这两种类型扩展<see cref="T:ExchangeWebServices.BaseGroupByType" />，这是一个抽象类。此属性是可选的。如果未设置此属性，而不将分组结果集。</para>
          <para>
            <b>注释</b>： 某些属性不能用于窗体组定义。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemShape">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.ItemResponseShapeType ItemShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.ItemResponseShapeType ItemShape" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.ItemShape" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemShape As ItemResponseShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::ItemResponseShapeType ^ ItemShape { ExchangeWebServices::ItemResponseShapeType ^ get(); void set(ExchangeWebServices::ItemResponseShapeType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.ItemResponseShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.FindItemType.ItemShape" />属性获取或设置查询集的形状。 此属性是必需的。 这是一个读/写属性。</summary>
        <value>
          <see cref="P:ExchangeWebServices.FindItemType.ItemShape" />属性返回<see cref="T:ExchangeWebServices.ItemResponseShapeType" />对象，其中包含的属性所请求结果集中返回的说明。</value>
        <remarks>
          <para>
            <see cref="P:ExchangeWebServices.FindItemType.ItemShape" />属性必须设置为 FindItem 操作。此属性描述了 FindItem 操作返回的属性。此属性是必需的。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentFolderIds">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.BaseFolderIdType[] ParentFolderIds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.BaseFolderIdType[] ParentFolderIds" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.ParentFolderIds" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentFolderIds As BaseFolderIdType()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;ExchangeWebServices::BaseFolderIdType ^&gt; ^ ParentFolderIds { cli::array &lt;ExchangeWebServices::BaseFolderIdType ^&gt; ^ get(); void set(cli::array &lt;ExchangeWebServices::BaseFolderIdType ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("FolderId", typeof(ExchangeWebServices.FolderIdType), IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("DistinguishedFolderId", typeof(ExchangeWebServices.DistinguishedFolderIdType), IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.BaseFolderIdType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.FindItemType.ParentFolderIds" />属性获取或设置 FindItem 操作搜索的文件夹。 此属性是必需的。 这是一个读/写属性。</summary>
        <value>
          <see cref="P:ExchangeWebServices.FindItemType.ParentFolderIds" />属性返回的数组<see cref="T:ExchangeWebServices.BaseFolderIdType" />对象包含的所有文件夹的要搜索的 FindItem 操作的标识符。</value>
        <remarks>
          <para>
            <see cref="P:ExchangeWebServices.FindItemType.ParentFolderIds" />属性可以设置与之一的数组<see cref="T:ExchangeWebServices.FolderIdType" />或<see cref="T:ExchangeWebServices.DistinguishedFolderIdType" />对象。这两种类型扩展<see cref="T:ExchangeWebServices.BaseFolderIdType" />，这是一个抽象类。</para>
          <para>此属性，则需要，并且必须设置为 FindItem 操作。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.QueryStringType QueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.QueryStringType QueryString" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryString As QueryStringType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::QueryStringType ^ QueryString { ExchangeWebServices::QueryStringType ^ get(); void set(ExchangeWebServices::QueryStringType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.QueryStringType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>返回<see cref="T:System.String" />。</value>
        <remarks>
          <para>
            <b>注意</b>： 此成员适用于 Exchange 开头包括 Exchange Online 的 Exchange Server 2010 Service Pack 1 (SP1) 的版本。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Restriction">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.RestrictionType Restriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.RestrictionType Restriction" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.Restriction" />
      <MemberSignature Language="VB.NET" Value="Public Property Restriction As RestrictionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::RestrictionType ^ Restriction { ExchangeWebServices::RestrictionType ^ get(); void set(ExchangeWebServices::RestrictionType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.RestrictionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.FindItemType.Restriction" />属性获取或设置定义项查询的搜索参数。 此属性是可选的。 这是一个读/写属性。</summary>
        <value>
          <see cref="P:ExchangeWebServices.FindItemType.Restriction" />属性返回<see cref="T:ExchangeWebServices.RestrictionType" />对象，其中包含用于定义查询的搜索参数。</value>
        <remarks>
          <para>
            <see cref="P:ExchangeWebServices.FindItemType.Restriction" />属性包含此查询筛选器包括的所有比较参数。它可以包含以下搜索表达式：</para>
          <list type="bullet">
            <item>
              <description>和</description>
            </item>
            <item>
              <description>包含</description>
            </item>
            <item>
              <description>排除</description>
            </item>
            <item>
              <description>Exists</description>
            </item>
            <item>
              <description>IsEqualTo</description>
            </item>
            <item>
              <description>IsGreaterThan</description>
            </item>
            <item>
              <description>IsGreaterThanOrEqualTo</description>
            </item>
            <item>
              <description>IsLessThan</description>
            </item>
            <item>
              <description>IsLessThanOrEqualTo</description>
            </item>
            <item>
              <description>IsNotEqualTo</description>
            </item>
            <item>
              <description>不</description>
            </item>
            <item>
              <description>或者</description>
            </item>
          </list>
          <para>此属性是可选。</para>
          <para>
            <b>注释</b>： 执行 CalendarView 分页时，不能指定限制。此外，某些属性不能用于窗体的限制定义。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortOrder">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.FieldOrderType[] SortOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.FieldOrderType[] SortOrder" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.SortOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property SortOrder As FieldOrderType()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;ExchangeWebServices::FieldOrderType ^&gt; ^ SortOrder { cli::array &lt;ExchangeWebServices::FieldOrderType ^&gt; ^ get(); void set(cli::array &lt;ExchangeWebServices::FieldOrderType ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("FieldOrder", IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.FieldOrderType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.FindItemType.SortOrder" />属性获取或设置在结果集中返回的项目的排序次序。 此属性是可选的。 这是一个读/写属性。</summary>
        <value>
          <see cref="P:ExchangeWebServices.FindItemType.SortOrder" />属性返回的数组<see cref="T:ExchangeWebServices.FieldOrderType" />描述使用哪些属性的结果集进行排序的对象。</value>
        <remarks>数组中的<para>第一个项目<see cref="T:ExchangeWebServices.FieldOrderType" />对象是主属性用于确定排序顺序。该数组中的下一项是辅助属性用于确定在结果集中的排序顺序。数组中的每个连续项<see cref="T:ExchangeWebServices.FieldOrderType" />对象用于对结果集，并且正在较低的优先级排序层次结构中的每个连续的项目中的项目进行排序。<see cref="T:ExchangeWebServices.FieldOrderType" />对象还介绍了项目的排序方向。</para><para>此属性是可选的。</para><para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="Traversal">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.ItemQueryTraversalType Traversal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ExchangeWebServices.ItemQueryTraversalType Traversal" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindItemType.Traversal" />
      <MemberSignature Language="VB.NET" Value="Public Property Traversal As ItemQueryTraversalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::ItemQueryTraversalType Traversal { ExchangeWebServices::ItemQueryTraversalType get(); void set(ExchangeWebServices::ItemQueryTraversalType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.ItemQueryTraversalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:ExchangeWebServices.FindItemType.Traversal" />属性获取或设置用于搜索的文件夹中的项目遍历方案。 此属性是必需的。 这是一个读/写属性。</summary>
        <value>
          <see cref="P:ExchangeWebServices.FindItemType.Traversal" />属性返回<see cref="T:ExchangeWebServices.ItemQueryTraversalType" />定义执行搜索的遍历的类型的枚举。</value>
        <remarks>
          <para>FindItem 仅支持浅表或软删除遍历的文件夹。若要执行深层遍历，使用搜索文件夹。</para>
          <para>此属性是 FindItem 操作必需的。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>