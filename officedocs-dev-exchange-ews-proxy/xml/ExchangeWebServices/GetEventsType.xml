<Type Name="GetEventsType" FullName="ExchangeWebServices.GetEventsType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0afaecbcbd74733c4d1df79577f294ad7ef00dc" />
    <Meta Name="ms.sourcegitcommit" Value="09f9993d313d1e3ec77e21f70573b3fced6eea2e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20602394" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GetEventsType : ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit GetEventsType extends ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.GetEventsType" />
  <TypeSignature Language="VB.NET" Value="Public Class GetEventsType&#xA;Inherits BaseRequestType" />
  <TypeSignature Language="C++ CLI" Value="public ref class GetEventsType : ExchangeWebServices::BaseRequestType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.BaseRequestType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/messages")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4400f-101">
        <see cref="T:ExchangeWebServices.GetEventsType" />类表示请求获得请求通知订阅事件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4400f-101">The <see cref="T:ExchangeWebServices.GetEventsType" /> class represents a request to get events for a pull notification subscription.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="4400f-102">
        <para>对日历项目的更改可能会导致生成的多个事件。对于其他项目的操作还可以生成多个低级别的事件。这些事件是邮箱和更改闲/忙信息和 / 或您的常用日历操作的一部分的数据存储项中的临时项目创建的结果。项类 IPM 的事件。Web 服务客户端应忽略 SchedulePlus.FreeBusy.BinaryData。在创建后删除临时项目。如果尝试检索这些项，则将返回错误，指出找不到项。</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="4400f-102">
          <para>Changes to calendar items may result in the generation of multiple events. Operations on other items can also generate multiple low-level events. These events are the result of the creation of temporary items in the mailbox and changes to free/busy data storage items as part of the usual Calendar operations, or both. Events for item class IPM.SchedulePlus.FreeBusy.BinaryData should be ignored by Web services clients. These temporary items are deleted after they are created. If an attempt is made to retrieve these items, an error will be returned that states that the item was not found.</para>
          <para />
        </span>
      </span>
    </remarks>
    <example>
      <span data-ttu-id="4400f-103">
        <para>下面的示例演示如何撰写请求获得请求通知订阅事件。用于生成请求的水印必须在最后一个返回的最后一个水印 GetEvents 呼叫，或者，如果这是第一个 GetEvents 呼叫，请从 Subscribe 响应水印。将保存的最后一个事件水印用于下次调用 GetEvents。</para>
        <code>static void GetEvents(ExchangeServiceBinding esb)
{ 
    // Create the GetEvents request.
    GetEventsType &lt;span class="label"&gt;request&lt;/span&gt; = new GetEventsType();

    // Identify the subscription identifier and watermark for the subscription 
    // that will be polled for changes in the Exchange store.
    &lt;span class="label"&gt;request&lt;/span&gt;.SubscriptionId = "2448550a-4685-412c-bc40-62f0999a8bdb";
    &lt;span class="label"&gt;request&lt;/span&gt;.Watermark = "AQAAAM/SnQORsD1IqTUHelGT0oxxHQAAAAAAAAE=";

    // Send the request and get the response.
    GetEventsResponseType response = esb.GetEvents(&lt;span class="label"&gt;request&lt;/span&gt;);
    ArrayOfResponseMessagesType aormt = response.ResponseMessages;
    ResponseMessageType[] rmta = aormt.Items;

    foreach (ResponseMessageType rmt in rmta)
    {
        // Determine whether the request was a success.
        if (rmt.ResponseClass == ResponseClassType.Success)
        {
            // Cast to appropriate response message type.
            GetEventsResponseMessageType responseMessage = (rmt as GetEventsResponseMessageType);

            // Get the notifications.
            NotificationType notificaton = responseMessage.Notification;
            BaseNotificationEventType[] bneta = notificaton.Items;

            foreach (BaseNotificationEventType bnet in bneta)
            {
                // TODO: Handle each notification. Refer to the Push Notification 
                //       sample for an example of how to do this.
            }

            if (notificaton.MoreEvents)
            {
                // TODO: Call GetEvents again with the watermark to get the
                //       remaining events.
            }
        }
    }
}</code>
        <para>有关拉通知的详细信息，请参阅推送通知示例应用程序。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="4400f-103">
          <para>The following example shows you how to compose a request to get the events for a pull notification subscription. The watermark that is used to build the request must be the last watermark that is returned in the last GetEvents call or, if this is the first GetEvents call, the watermark from the Subscribe response. The watermark of the last event should be saved to be used for the next call to GetEvents.</para>
          <code>static void GetEvents(ExchangeServiceBinding esb)
{ 
    // Create the GetEvents request.
    GetEventsType &lt;span class="label"&gt;request&lt;/span&gt; = new GetEventsType();

    // Identify the subscription identifier and watermark for the subscription 
    // that will be polled for changes in the Exchange store.
    &lt;span class="label"&gt;request&lt;/span&gt;.SubscriptionId = "2448550a-4685-412c-bc40-62f0999a8bdb";
    &lt;span class="label"&gt;request&lt;/span&gt;.Watermark = "AQAAAM/SnQORsD1IqTUHelGT0oxxHQAAAAAAAAE=";

    // Send the request and get the response.
    GetEventsResponseType response = esb.GetEvents(&lt;span class="label"&gt;request&lt;/span&gt;);
    ArrayOfResponseMessagesType aormt = response.ResponseMessages;
    ResponseMessageType[] rmta = aormt.Items;

    foreach (ResponseMessageType rmt in rmta)
    {
        // Determine whether the request was a success.
        if (rmt.ResponseClass == ResponseClassType.Success)
        {
            // Cast to appropriate response message type.
            GetEventsResponseMessageType responseMessage = (rmt as GetEventsResponseMessageType);

            // Get the notifications.
            NotificationType notificaton = responseMessage.Notification;
            BaseNotificationEventType[] bneta = notificaton.Items;

            foreach (BaseNotificationEventType bnet in bneta)
            {
                // TODO: Handle each notification. Refer to the Push Notification 
                //       sample for an example of how to do this.
            }

            if (notificaton.MoreEvents)
            {
                // TODO: Call GetEvents again with the watermark to get the
                //       remaining events.
            }
        }
    }
}</code>
          <para>For more information about pull notifications, see Push Notification Sample Application.</para>
        </span>
      </span>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GetEventsType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.GetEventsType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GetEventsType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4400f-104">
            <see cref="T:ExchangeWebServices.GetEventsType" />构造函数初始化的新实例<see cref="T:ExchangeWebServices.GetEventsType" />类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4400f-104">The <see cref="T:ExchangeWebServices.GetEventsType" /> constructor initializes a new instance of the <see cref="T:ExchangeWebServices.GetEventsType" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscriptionId">
      <MemberSignature Language="C#" Value="public string SubscriptionId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubscriptionId" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.GetEventsType.SubscriptionId" />
      <MemberSignature Language="VB.NET" Value="Public Property SubscriptionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SubscriptionId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4400f-105">
            <see cref="P:ExchangeWebServices.GetEventsType.SubscriptionId" />属性获取或设置一个订阅的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4400f-105">The <see cref="P:ExchangeWebServices.GetEventsType.SubscriptionId" /> property gets or sets the identifier of a subscription.</span>
          </span>
          <span data-ttu-id="4400f-106">此属性是必需的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4400f-106">This property is required.</span>
          </span>
          <span data-ttu-id="4400f-107">这是一个读/写属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4400f-107">This is a read/write property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4400f-108">
            <see cref="P:ExchangeWebServices.GetEventsType.SubscriptionId" /> 属性返回一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4400f-108">The <see cref="P:ExchangeWebServices.GetEventsType.SubscriptionId" /> property returns a string.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4400f-109">
            <para>表示订阅标识符的字符串是一个 GUID。创建订阅时由客户端访问服务器生成 GUID。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4400f-109">
              <para>The string that represents the subscription identifier is a GUID. The GUID is generated by the Client Access server when the subscription is created.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Watermark">
      <MemberSignature Language="C#" Value="public string Watermark { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Watermark" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.GetEventsType.Watermark" />
      <MemberSignature Language="VB.NET" Value="Public Property Watermark As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Watermark { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4400f-110">
            <see cref="P:ExchangeWebServices.GetEventsType.Watermark" />属性获取或设置一个 string 值，该值代表邮箱事件队列中的事件书签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4400f-110">The <see cref="P:ExchangeWebServices.GetEventsType.Watermark" /> property gets or sets a string that represents an event bookmark in the mailbox event queue.</span>
          </span>
          <span data-ttu-id="4400f-111">此属性是必需的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4400f-111">This property is required.</span>
          </span>
          <span data-ttu-id="4400f-112">这是一个读/写属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4400f-112">This is a read/write property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4400f-113">
            <see cref="P:ExchangeWebServices.GetEventsType.Watermark" /> 属性返回一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4400f-113">The <see cref="P:ExchangeWebServices.GetEventsType.Watermark" /> property returns a string.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4400f-114">
            <para>此水印介绍其中 GetEvents 操作开始返回事件。传递给 GetEvents 水印必须返回到客户端的最后一个水印。如果订阅后 GetEvents 第一次调用，返回的 Subscribe 水印应传递给 GetEvents。如果已调用 GetEvents，调用传递给下一个水印 GetEvents 调用必须返回从以前 GetEvents 的最后一个事件水印。</para>
            <para>如果<see cref="P:ExchangeWebServices.GetEventsType.Watermark" />属性设置无效水印，<see cref="F:ExchangeWebServices.ResponseCodeType.ErrorInvalidWatermark" />到客户端应用程序，则返回错误。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4400f-114">
              <para>This watermark describes where the GetEvents operation begins to return events. The watermark that is passed to GetEvents must be the last watermark that was returned to the client. If this is the first call to GetEvents after Subscribe, the watermark that is returned by Subscribe should be passed to GetEvents. If GetEvents has already been called, the watermark that is passed to the next GetEvents call must be the watermark of the last event that is returned from the previous GetEvents call.</para>
              <para>If the <see cref="P:ExchangeWebServices.GetEventsType.Watermark" /> property is set with an invalid watermark, an <see cref="F:ExchangeWebServices.ResponseCodeType.ErrorInvalidWatermark" /> error is returned to the client application.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>